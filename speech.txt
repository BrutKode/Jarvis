# how to convert text to speech
import pyttsx3

# Initialize the converter 
converter = pyttsx3.init('espeak')

# Initialize recognizer class (for recognizing the speech)

# Reading Microphone as source
# listening the speech and store in audio_text variable

# recoginize_() method will throw a request error if the API is unreachable, hence using exception handling
    
# Set properties before adding 
# Things to say 
  
# Sets speed percent  
# Can be more than 100 
converter.setProperty('rate', 105) 
# Set volume 0-1 
converter.setProperty('volume', 1)
  
# Queue the entered text  
# There will be a pause between 
# each one like a pause in  
# a sentence
voices = converter.getProperty('voices')
converter.setProperty('voice', voices[13].id)
#print (voices)

converter.say("hallo")

# Reading Microphone as source
# listening the speech and store in audio_text variable

# recoginize_() method will throw a request error if the API is unreachable, hence using exception handling 

  
# Empties the say() queue 
# Program will not continue 
# until all speech is done talking 
converter.runAndWait() 

# Print all available voices
import pyttsx3
engine = pyttsx3.init()

voices = engine.getProperty('voices')
for voice in voices:
    print("Voice:")
    print(" - ID: %s" % voice.id)
    print(" - Name: %s" % voice.name)
    print(" - Languages: %s" % voice.languages)
    print(" - Gender: %s" % voice.gender)
    print(" - Age: %s" % voice.age)

import pyttsx3
engine = pyttsx3.init()

# Voice IDs pulled from engine.getProperty('voices')
# These will be system specific
en_voice_id = "english-us"

# Use female English voice
engine.setProperty('voice', en_voice_id)
engine.say('Hello with my new voice')

engine.runAndWait()
